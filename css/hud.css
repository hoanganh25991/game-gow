/* css/hud.css
   HUD & minimap styles: top-left stats, bars, level badge, minimap, hints.
   Variables are defined in css/base.css.
*/

#hud{
  position: absolute;
  top: 12px;
  left: 12px;
  width: min(20rem, 45vw);
  padding: 10px 12px;
  background: var(--glass);
  border: 1px solid var(--border-orange-light);
  border-radius: 10px;
  backdrop-filter: blur(6px);
  box-shadow: var(--shadow-medium);
  pointer-events: auto;
  z-index: 20;
}

#stats{
  display: grid;
  grid-template-columns: 1fr auto;
  grid-auto-rows: auto;
  gap: 8px 12px;
  align-items: center;
}

/* Generic bar (hp/mp/xp) */
.bar{
  position: relative;
  height: 18px;
  background: var(--border-white-faint);
  border: 1px solid var(--border-white-subtle);
  border-radius: 6px;
  overflow: hidden;
  grid-column: 1 / 2;
}

.bar .fill{
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 50%;
  background: linear-gradient(90deg, rgba(255,255,255,0.25), rgba(255,255,255,0) 30%) no-repeat,
              linear-gradient(180deg, var(--hp), #cc3333);
  transition: width 120ms ease-out;
  box-shadow: inset 0 -2px 6px rgba(0,0,0,0.25), 0 0 8px rgba(255, 68, 68, 0.4);
}

/* Specific bar color overrides */
.bar.hp .fill{
  background: linear-gradient(90deg, rgba(255,255,255,0.25), rgba(255,255,255,0) 30%) no-repeat,
              linear-gradient(180deg, var(--hp), #cc3333);
}
.bar.mp .fill{
  background: linear-gradient(90deg, rgba(255,255,255,0.25), rgba(255,255,255,0) 30%) no-repeat,
              linear-gradient(180deg, var(--mp), #2255cc);
  box-shadow: inset 0 -2px 6px rgba(0,0,0,0.3), 0 0 8px rgba(68, 136, 255, 0.4);
}
.bar.xp .fill{
  background: linear-gradient(90deg, rgba(255,255,255,0.25), rgba(255,255,255,0) 30%) no-repeat,
              linear-gradient(180deg, var(--xp), #cc7722);
  box-shadow: inset 0 -2px 6px rgba(0,0,0,0.25), 0 0 8px rgba(255, 170, 68, 0.4);
}

.bar .label{
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 8px;
  font-size: 12px;
  color: var(--text-warm);
  text-shadow: 0 1px 0 rgba(0,0,0,0.4);
  mix-blend-mode: screen;
  pointer-events: none;
}

#level{
  grid-column: 2 / 3;
  grid-row: 1 / span 3;
  align-self: stretch;
  display: grid;
  place-items: center;
  min-width: 58px;
  padding: 4px 8px;
  border-radius: 8px;
  background: linear-gradient(180deg, rgba(255,140,66,0.2), rgba(255,107,53,0.1));
  border: 1px solid var(--border-orange);
  font-weight: 700;
  color: var(--text-warm-light);
  text-shadow: 0 1px 0 rgba(0,0,0,0.4);
}

/* Minimap (top-right, below top-right buttons) */
#minimap{
  position: absolute;
  right: 12px;
  top: 12px;
  background: var(--glass);
  border: 1px solid var(--border-orange);
  border-radius: 10px;
  box-shadow: var(--shadow-medium);
  image-rendering: pixelated;
  pointer-events: auto;
  z-index: 30;
  overflow: hidden;
}

/* Hints box bottom-left */
#hints{
  position: absolute;
  left: 12px;
  bottom: 12px;
  padding: 10px 12px;
  background: var(--glass);
  border: 1px solid rgba(255,140,66,0.3);
  border-radius: 10px;
  backdrop-filter: blur(6px);
  color: #ffd4b3;
  font-size: 12px;
  line-height: 1.4;
  pointer-events: none;
  box-shadow: 0 8px 30px rgba(0,0,0,0.35);
}

/* Instructions list inside settings (small helper; kept here as HUD-related content) */
.instr-title{ font-weight:800; margin-bottom: 6px;  }
#settingsInstructions { font-size: 12px;}
#settingsInstructions ul{ margin: 6px 0 0 18px; padding:0; }
#settingsInstructions li{ margin: 4px 0; }

/* Small responsive tweak for HUD */
@media (max-width: 720px) {
  #hud { width: 90vw; left: 6px; top: 8px; padding: 8px; }
  #minimap { right: 8px; top: 8px; width: 160px; height: 160px; }
}

/* Top-right flex stack: minimap above screenGroup */
#topRightGroup{
  position: fixed;
  right: 12px;
  top: 12px;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  gap: 8px;
  z-index: 30;          /* same visual layer as minimap */
  pointer-events: none; /* allow underlying world unless child captures */
}
#topRightGroup > *{ pointer-events: auto; }

/* Make minimap flow inside the group (disable its absolute offsets when in group) */
#topRightGroup #minimap{
  position: static;
  right: auto;
  top: auto;
}

@media (max-width: 720px){
  #topRightGroup{
    right: 8px;
    top: 8px;
    gap: 6px;
  }
}